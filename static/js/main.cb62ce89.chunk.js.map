{"version":3,"sources":["panels/Home.js","panels/ClassChooser.js","App.js","sw.js","index.js","img/nwtt_full.svg"],"names":["Home","_ref","id","go","state","react_default","a","createElement","es6","theme","src","logo_full","alt","className","top","placeholder","onClick","data-to","class","ClassChooser","ClassChooser_this","setState","activeView","asideContent","done_default","fill","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","activePanel","currentTarget","dataset","to","fetchedUser","_this2","connect","subscribe","detail","type","data","console","log","send","panels_Home","panels_ClassChooser","React","Component","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","isLocalhost","Boolean","window","location","hostname","match","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.cb62ce89.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, FormLayout, SelectMimicry, PanelHeader } from '@vkontakte/vkui';\nimport logo_full from '../img/nwtt_full.svg';\nimport '../main.css';\n\nconst Home = ({ id, go, state }) => (\n\t<Panel id={id} theme={\"white\"}>\n\t\t<PanelHeader>NeoWave Timetable</PanelHeader>\n\t\t<img src={logo_full} alt=\"Logo\" className=\"logo\"/>\n\n\t\t<FormLayout>\n\t\t\t<SelectMimicry\n\t\t\t\ttop=\"Выберите свой класс\"\n\t\t\t\tplaceholder=\"Не выбран\"\n\t\t\t\tonClick={() => go()}\n\t\t\t\tdata-to={\"classchooser\"}\n\t\t\t>{state.class}</SelectMimicry>\n\t\t</FormLayout>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Cell, Group, List, Panel, PanelHeader} from '@vkontakte/vkui';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\nimport '../main.css';\n\nconst ClassChooser = ({id, go}) => (\n    <Panel id={id} theme={\"white\"}>\n        <PanelHeader>NeoWave Timetable</PanelHeader>\n        <PanelHeader>\n            Выбор страны\n        </PanelHeader>\n        <Group>\n            <List>\n                <Cell\n                    onClick={() => this.setState({class: 'Россия', activeView: 'home'})}\n                    asideContent={this.state.class === 'Россия' ? <Icon24Done fill=\"var(--accent)\"/> : null}\n                >\n                    Россия\n                </Cell>\n                <Cell\n                    onClick={() => this.setState({class: 'Италия', activeView: 'home'})}\n                    asideContent={this.state.class === 'Италия' ? <Icon24Done fill=\"var(--accent)\"/> : null}\n                >\n                    Италия\n                </Cell>\n                <Cell\n                    onClick={() => this.setState({class: 'Англия', activeView: 'home'})}\n                    asideContent={this.state.class === 'Англия' ? <Icon24Done fill=\"var(--accent)\"/> : null}\n                >\n                    Англия\n                </Cell>\n            </List>\n        </Group>\n    </Panel>\n);\n\nexport default ClassChooser;\n","import React from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport ClassChooser from './panels/ClassChooser';\n\nclass App extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tclass: ''\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} state={this.state} />\n\t\t\t\t<ClassChooser id=\"classchooser\" go={this.go} state={this.state} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\nregisterServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/nwtt_full.6265858a.svg\";"],"sourceRoot":""}